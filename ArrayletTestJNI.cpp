/* DO NOT EDIT THIS FILE - it is machine generated */
#include "ArrayletTestJNI.h"
#include <iostream>
/* Header for class ArrayletTestJNI */

/*
 * Class:     ArrayletTestJNI
 * Method:    getPrimitiveArrayCritical
 * Signature: ([I)V
 */
JNIEXPORT void JNICALL Java_ArrayletTestJNI_testPrimitiveArrayCriticalArraylets
  (JNIEnv* env, jobject obj, jdoubleArray array, jint sizePtr) 
{
	std::cout << "Hello from Java_ArrayletTestJNI_getPrimitiveArrayCritical() ********************************" << std::endl;
	jboolean isCopy;
	double *elems;
	int arrayLength = (int)sizePtr;
	elems = (double*)env->GetPrimitiveArrayCritical(array, &isCopy);
	// Do something here, e.g. change arraylet elements 
	std::cout << "Is it indexible(arraylet leaves) y/n: " << (((bool)isCopy) ? "yes" : "no") << ", arrayLength: " << arrayLength << std::endl;

	std::cout << "Elements at positions multiple of 4096 including 0\n";
	for(int i = 0; i < arrayLength; i += 4096) {
		std::cout << i << ":" << elems[i] << ", ";
		elems[i] = 7.5;
	}
	std::cout << std::endl;

	env->ReleasePrimitiveArrayCritical(array, (jdouble*)elems, JNI_COMMIT);
}

